{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xAFC790b0DC5D0DDff558fbdD3A9e186502363eEe",
    "txHash": "0xdd81283bdb21eeba3ebd99d2966cbefbb3470344ace67b111da7b3bfd0572961",
    "deployTransaction": {
      "hash": "0xdd81283bdb21eeba3ebd99d2966cbefbb3470344ace67b111da7b3bfd0572961",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x58BB0c43eF9f4A34410adfbbB32D3Fc5b14d1cA7",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x3b9aca0f"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca0f"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 36,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xf6200e309ec1143bb8b22a404ac665d2d38ac3cb2c17ba83727e82d7c3f1ca8b",
      "s": "0x143c567fd1fa792e029a958ce47c0599a9d331ef9812119591208aba75ea6539",
      "v": 0,
      "creates": "0xAFC790b0DC5D0DDff558fbdD3A9e186502363eEe",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0x5d8f3e62f5dBb08f6604F14cf19704C0C93f067F",
      "txHash": "0x18cf271c2f1ddbcd31669f28633fde8c7dbcfe97d6f57951a8b9d91d25a7a78b",
      "kind": "transparent"
    },
    {
      "address": "0x868D56EB1E892DE3eC97aD14861f9dEefc82e591",
      "txHash": "0xf0fa89adc3dcaaa8ef79d4172bf9879d5a3fd9afd400c62cdacfe1403bfca031",
      "kind": "transparent"
    },
    {
      "address": "0xC8D9f6205acAA92E349cF467a5F73E1424A49A79",
      "txHash": "0xfb5a743d8c38194132dbcbb62da54aad6ba9527374ca91ad45015084db0832c8",
      "kind": "transparent"
    },
    {
      "address": "0x596C7efB55C5fF4eDf2f8055A2B6AB675eCF6087",
      "txHash": "0xf751bf5c0ed450c8ea64a60015ed7a514d41eeab6265e96cb23d51abb4341b73",
      "kind": "transparent"
    },
    {
      "address": "0x4958e6B98414649318aCCa5B0d7c2898d0279b57",
      "txHash": "0x124ddae347a4e037466acf85fff1d74e3f3ca861e5662da98e26b500ce768c41",
      "kind": "transparent"
    },
    {
      "address": "0x86aC976885a4149682D43d865270b05A5F4EEe26",
      "txHash": "0x3ad2a5981840376db4d33d0f8d757f4402fe8c345e3d8a2649a656fcc9ffe70e",
      "kind": "transparent"
    },
    {
      "address": "0xE427c6c23987eA17DaE0D627b423d0468bC4875e",
      "txHash": "0xf40e56f595cae1f947d60372509efa597a8b0566ff0a831413419a7b168f6c3c",
      "kind": "transparent"
    },
    {
      "address": "0x416e26973da8f0223734873D01CC36b97b05ae4a",
      "txHash": "0x0166e766bf11b23e7c59a233be0095821636d6a9acb11b80e58a64331630c9ba",
      "kind": "transparent"
    },
    {
      "address": "0x1F05fEB468083c492301D3C758c3B89829ee14bd",
      "txHash": "0x17814239f86e07b1beb3bf339e0fcb4ae364b6ff6173ea10ceeb14741fb82420",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f1c0716c35a0ecd84a41f85831c86bdbc198308af3586c94a827c5961118cf44": {
      "address": "0xa8b5a8505eaFa1426Eff0CBB1812825F79753168",
      "txHash": "0x878f298993b426f4108d5569bd116f16386e11d86083f0e65033c0bc7f549592",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "278f6f89cd6fcfbbe99456decb554c0a286914cefaf01d4be7a4864ff4b1aeaf": {
      "address": "0x01F8290dec1dB228bdd7e50fD8f5e348552756e6",
      "txHash": "0x11f2570c559a231c492ca00cfc38e0524e6ba55117b87b72de99a76ada5ca555",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "b0f14fe79fd035a36470ae1aa381e437efc49ddf13843e20cbbb82396ca16851": {
      "address": "0xD7649378FCc0bcCB2beB888117bbade14f1135f8",
      "txHash": "0x494176be32861c9b176e2ac79730296bee78d5de020488dc4c2c7a30fff6a846",
      "layout": {
        "storage": [
          {
            "contract": "EmpireMarketplace",
            "label": "serviceFee",
            "type": "t_uint256",
            "src": "contracts/EmpireMarketplace.sol:201"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "feeAddress",
            "type": "t_address",
            "src": "contracts/EmpireMarketplace.sol:202"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "marketplaceOwner",
            "type": "t_address",
            "src": "contracts/EmpireMarketplace.sol:203"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "empireToken",
            "type": "t_address",
            "src": "contracts/EmpireMarketplace.sol:204"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "itemsForSale",
            "type": "t_array(t_struct(AuctionItem)404_storage)dyn_storage",
            "src": "contracts/EmpireMarketplace.sol:205"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "activeItems",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EmpireMarketplace.sol:208"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "validERC",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EmpireMarketplace.sol:210"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "auctionItemId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EmpireMarketplace.sol:213"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "pendingReturns",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts/EmpireMarketplace.sol:216"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(AuctionItem)404_storage)dyn_storage": {
            "label": "struct EmpireMarketplace.AuctionItem[]"
          },
          "t_struct(AuctionItem)404_storage": {
            "label": "struct EmpireMarketplace.AuctionItem",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "askingPrice",
                "type": "t_uint256"
              },
              {
                "label": "isSold",
                "type": "t_bool"
              },
              {
                "label": "bidItem",
                "type": "t_bool"
              },
              {
                "label": "bidPrice",
                "type": "t_uint256"
              },
              {
                "label": "bidderAddress",
                "type": "t_address"
              },
              {
                "label": "ERC20",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
          }
        }
      }
    },
    "3b70b6b29ea3076c0dd26709940d8ea0ceaafff322ed560543e82c352b87787b": {
      "address": "0xA40605E337Ee98ce22ff23b2eA234F2AdeDFbb2a",
      "txHash": "0x7482e6c4b32065aadf4ef2e0ee335828e6d8e9997cefefc87ab2faef8c423a55",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "serviceFee",
            "type": "t_uint256",
            "src": "contracts/EmpireMarketplace.sol:204"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "feeAddress",
            "type": "t_address",
            "src": "contracts/EmpireMarketplace.sol:205"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "marketplaceOwner",
            "type": "t_address",
            "src": "contracts/EmpireMarketplace.sol:206"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "empireToken",
            "type": "t_address",
            "src": "contracts/EmpireMarketplace.sol:207"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "itemsForSale",
            "type": "t_array(t_struct(AuctionItem)3713_storage)dyn_storage",
            "src": "contracts/EmpireMarketplace.sol:208"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "activeItems",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EmpireMarketplace.sol:211"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "validERC",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EmpireMarketplace.sol:213"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "auctionItemId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EmpireMarketplace.sol:216"
          },
          {
            "contract": "EmpireMarketplace",
            "label": "pendingReturns",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts/EmpireMarketplace.sol:219"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(AuctionItem)3713_storage)dyn_storage": {
            "label": "struct EmpireMarketplace.AuctionItem[]"
          },
          "t_struct(AuctionItem)3713_storage": {
            "label": "struct EmpireMarketplace.AuctionItem",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "askingPrice",
                "type": "t_uint256"
              },
              {
                "label": "isSold",
                "type": "t_bool"
              },
              {
                "label": "bidItem",
                "type": "t_bool"
              },
              {
                "label": "bidPrice",
                "type": "t_uint256"
              },
              {
                "label": "bidderAddress",
                "type": "t_address"
              },
              {
                "label": "ERC20",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
          }
        }
      }
    },
    "e68db6d9b236d781dff343e5483496af0031b1a8c3954cf8d337b38b570ef611": {
      "address": "0x6dC245B5b7dE9881199df9A38B0bc6A26185F4be",
      "txHash": "0x8edd28710ec980160db3f94ce843ed84cece1732ecbeb4ca3f77d55ced782a82",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "140e28fb9995b44d10193a6c7f9ebd17e0deb5fa53f640e7f0744b9b08fb756a": {
      "address": "0x6433003B95D72B281Dd9dBb6Ed87dEE626a36941",
      "txHash": "0xf35dcdb4c9aef005c698089181223f161678ac970c00034afd10f10f82a3e815",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "EmpireMarketplaceV2",
            "label": "serviceFee",
            "type": "t_uint256",
            "src": "contracts/EmpireMarketplaceV2.sol:54"
          },
          {
            "contract": "EmpireMarketplaceV2",
            "label": "feeAddress",
            "type": "t_address",
            "src": "contracts/EmpireMarketplaceV2.sol:55"
          },
          {
            "contract": "EmpireMarketplaceV2",
            "label": "marketplaceOwner",
            "type": "t_address",
            "src": "contracts/EmpireMarketplaceV2.sol:56"
          },
          {
            "contract": "EmpireMarketplaceV2",
            "label": "empireToken",
            "type": "t_address",
            "src": "contracts/EmpireMarketplaceV2.sol:57"
          },
          {
            "contract": "EmpireMarketplaceV2",
            "label": "itemsForSale",
            "type": "t_array(t_struct(AuctionItem)6560_storage)dyn_storage",
            "src": "contracts/EmpireMarketplaceV2.sol:58"
          },
          {
            "contract": "EmpireMarketplaceV2",
            "label": "activeItems",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EmpireMarketplaceV2.sol:61"
          },
          {
            "contract": "EmpireMarketplaceV2",
            "label": "validERC",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EmpireMarketplaceV2.sol:62"
          },
          {
            "contract": "EmpireMarketplaceV2",
            "label": "auctionItemId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EmpireMarketplaceV2.sol:63"
          },
          {
            "contract": "EmpireMarketplaceV2",
            "label": "pendingReturns",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts/EmpireMarketplaceV2.sol:64"
          },
          {
            "contract": "EmpireMarketplaceV2",
            "label": "fake",
            "type": "t_uint256",
            "src": "contracts/EmpireMarketplaceV2.sol:69"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(AuctionItem)6560_storage)dyn_storage": {
            "label": "struct EmpireMarketplaceV2.AuctionItem[]"
          },
          "t_struct(AuctionItem)6560_storage": {
            "label": "struct EmpireMarketplaceV2.AuctionItem",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "askingPrice",
                "type": "t_uint256"
              },
              {
                "label": "isSold",
                "type": "t_bool"
              },
              {
                "label": "bidItem",
                "type": "t_bool"
              },
              {
                "label": "bidPrice",
                "type": "t_uint256"
              },
              {
                "label": "bidderAddress",
                "type": "t_address"
              },
              {
                "label": "ERC20",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
          }
        }
      }
    },
    "e4c96317a7257a72c8792f8962630b9b14812c9d49bb8a09529bb3a5af2214b1": {
      "address": "0xa743b8BF4392c8a5CC5B7e8ac54a3C3331fc641b",
      "txHash": "0xd443569742c812e9a49d28e7972b054479b357ae67cd1b31d9b717750fae5169",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "EmpireCollection",
            "label": "_tokenIds",
            "type": "t_uint256",
            "src": "contracts/EmpireCollection.sol:8"
          },
          {
            "contract": "EmpireCollection",
            "label": "royalty",
            "type": "t_uint256",
            "src": "contracts/EmpireCollection.sol:10"
          },
          {
            "contract": "EmpireCollection",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts/EmpireCollection.sol:11"
          },
          {
            "contract": "EmpireCollection",
            "label": "itemCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/EmpireCollection.sol:12"
          },
          {
            "contract": "EmpireCollection",
            "label": "Items",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/EmpireCollection.sol:13"
          },
          {
            "contract": "EmpireCollection",
            "label": "collectionOwner",
            "type": "t_address",
            "src": "contracts/EmpireCollection.sol:14"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f0350ea3e743f30c16e255c572bdec5eb7633c570db00e85c1117572315b37e9": {
      "address": "0x484Be75ef3CA8e73B9DdeDfa066c0f8599467684",
      "txHash": "0x8bf7388c04a31525ba5da740dc5749101ad12c66a98ed799e89783f483a3fbe9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "EmpireCollectionV2",
            "label": "_tokenIds",
            "type": "t_uint256",
            "src": "contracts/EmpireCollectionV2.sol:8"
          },
          {
            "contract": "EmpireCollectionV2",
            "label": "royalty",
            "type": "t_uint256",
            "src": "contracts/EmpireCollectionV2.sol:10"
          },
          {
            "contract": "EmpireCollectionV2",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts/EmpireCollectionV2.sol:11"
          },
          {
            "contract": "EmpireCollectionV2",
            "label": "itemCreator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/EmpireCollectionV2.sol:12"
          },
          {
            "contract": "EmpireCollectionV2",
            "label": "Items",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/EmpireCollectionV2.sol:13"
          },
          {
            "contract": "EmpireCollectionV2",
            "label": "collectionOwner",
            "type": "t_address",
            "src": "contracts/EmpireCollectionV2.sol:14"
          },
          {
            "contract": "EmpireCollectionV2",
            "label": "hello",
            "type": "t_address",
            "src": "contracts/EmpireCollectionV2.sol:15"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7522977fa55a14721193ec4b21ece7dca45d96aaac9a3d80b8a2ca8edd99794e": {
      "address": "0x3AbB6A7db8c6D13eDa840b11123052ac55A702aB",
      "txHash": "0x7a7ccfe12bc6d86f53bfd79f05bd3fcc09ba3d3a3b2a2641cf12097daf08ad72",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/TrustMultiV1.sol:14"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/TrustMultiV1.sol:19"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/TrustMultiV1.sol:64"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/TrustMultiV1.sol:106"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/TrustMultiV1.sol:498"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/TrustMultiV1.sol:501"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/TrustMultiV1.sol:504"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/TrustMultiV1.sol:506"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/TrustMultiV1.sol:509"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "token_id",
            "type": "t_mapping(t_uint256,t_struct(Metadata)759_storage)",
            "src": "contracts/TrustMultiV1.sol:516"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_creator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/TrustMultiV1.sol:517"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "checker",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/TrustMultiV1.sol:518"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/TrustMultiV1.sol:959"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/TrustMultiV1.sol:1021"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/TrustMultiV1.sol:1081"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/TrustMultiV1.sol:1124"
          },
          {
            "contract": "TrustMultiV1",
            "label": "order_place",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Order)2565_storage))",
            "src": "contracts/TrustMultiV1.sol:1440"
          },
          {
            "contract": "TrustMultiV1",
            "label": "checkOrder",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/TrustMultiV1.sol:1441"
          },
          {
            "contract": "TrustMultiV1",
            "label": "totalQuantity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/TrustMultiV1.sol:1442"
          },
          {
            "contract": "TrustMultiV1",
            "label": "_royal",
            "type": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(royalstr)2587_storage))",
            "src": "contracts/TrustMultiV1.sol:1449"
          },
          {
            "contract": "TrustMultiV1",
            "label": "tokentype",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "contracts/TrustMultiV1.sol:1450"
          },
          {
            "contract": "TrustMultiV1",
            "label": "serviceValue",
            "type": "t_uint256",
            "src": "contracts/TrustMultiV1.sol:1452"
          },
          {
            "contract": "TrustMultiV1",
            "label": "_currentBaseURI",
            "type": "t_string_storage",
            "src": "contracts/TrustMultiV1.sol:1454"
          },
          {
            "contract": "TrustMultiV1",
            "label": "_tid",
            "type": "t_uint256",
            "src": "contracts/TrustMultiV1.sol:1455"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Order)2565_storage))": {
            "label": "mapping(address => mapping(uint256 => struct TrustMultiV1.Order))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Order)2565_storage)": {
            "label": "mapping(uint256 => struct TrustMultiV1.Order)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Order)2565_storage": {
            "label": "struct TrustMultiV1.Order",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(royalstr)2587_storage))": {
            "label": "mapping(uint256 => mapping(string => struct TrustMultiV1.royalstr))"
          },
          "t_mapping(t_string_memory_ptr,t_struct(royalstr)2587_storage)": {
            "label": "mapping(string => struct TrustMultiV1.royalstr)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(royalstr)2587_storage": {
            "label": "struct TrustMultiV1.royalstr",
            "members": [
              {
                "label": "uaddress",
                "type": "t_address"
              },
              {
                "label": "pecentr",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_uint256,t_struct(Metadata)759_storage)": {
            "label": "mapping(uint256 => struct ERC1155Upgradeable.Metadata)"
          },
          "t_struct(Metadata)759_storage": {
            "label": "struct ERC1155Upgradeable.Metadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "ipfsimage",
                "type": "t_string_storage"
              },
              {
                "label": "ipfsmetadata",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "80b300454a97518d19fefe93824bd9e3c85aeb3217580c6975c7e8197f42f708": {
      "address": "0x2A3366a2ba343de0F873C52b985Ed2A35e8286a3",
      "txHash": "0xd8b37a0ae92f2f7657356950238030cdff4609347b50b9adf13d34d351c9be72",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/TrustMultiV1.sol:14"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/TrustMultiV1.sol:19"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/TrustMultiV1.sol:64"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/TrustMultiV1.sol:106"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/TrustMultiV1.sol:498"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/TrustMultiV1.sol:501"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/TrustMultiV1.sol:504"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/TrustMultiV1.sol:506"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/TrustMultiV1.sol:509"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "token_id",
            "type": "t_mapping(t_uint256,t_struct(Metadata)759_storage)",
            "src": "contracts/TrustMultiV1.sol:516"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_creator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/TrustMultiV1.sol:517"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "checker",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/TrustMultiV1.sol:518"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/TrustMultiV1.sol:959"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/TrustMultiV1.sol:1021"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/TrustMultiV1.sol:1081"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/TrustMultiV1.sol:1124"
          },
          {
            "contract": "TrustMultiV1",
            "label": "order_place",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Order)2565_storage))",
            "src": "contracts/TrustMultiV1.sol:1440"
          },
          {
            "contract": "TrustMultiV1",
            "label": "checkOrder",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/TrustMultiV1.sol:1441"
          },
          {
            "contract": "TrustMultiV1",
            "label": "totalQuantity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/TrustMultiV1.sol:1442"
          },
          {
            "contract": "TrustMultiV1",
            "label": "_royal",
            "type": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(royalstr)2587_storage))",
            "src": "contracts/TrustMultiV1.sol:1449"
          },
          {
            "contract": "TrustMultiV1",
            "label": "tokentype",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "contracts/TrustMultiV1.sol:1450"
          },
          {
            "contract": "TrustMultiV1",
            "label": "serviceValue",
            "type": "t_uint256",
            "src": "contracts/TrustMultiV1.sol:1452"
          },
          {
            "contract": "TrustMultiV1",
            "label": "_currentBaseURI",
            "type": "t_string_storage",
            "src": "contracts/TrustMultiV1.sol:1454"
          },
          {
            "contract": "TrustMultiV1",
            "label": "_tid",
            "type": "t_uint256",
            "src": "contracts/TrustMultiV1.sol:1455"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Order)2565_storage))": {
            "label": "mapping(address => mapping(uint256 => struct TrustMultiV1.Order))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Order)2565_storage)": {
            "label": "mapping(uint256 => struct TrustMultiV1.Order)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Order)2565_storage": {
            "label": "struct TrustMultiV1.Order",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(royalstr)2587_storage))": {
            "label": "mapping(uint256 => mapping(string => struct TrustMultiV1.royalstr))"
          },
          "t_mapping(t_string_memory_ptr,t_struct(royalstr)2587_storage)": {
            "label": "mapping(string => struct TrustMultiV1.royalstr)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(royalstr)2587_storage": {
            "label": "struct TrustMultiV1.royalstr",
            "members": [
              {
                "label": "uaddress",
                "type": "t_address"
              },
              {
                "label": "pecentr",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_uint256,t_struct(Metadata)759_storage)": {
            "label": "mapping(uint256 => struct ERC1155Upgradeable.Metadata)"
          },
          "t_struct(Metadata)759_storage": {
            "label": "struct ERC1155Upgradeable.Metadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "ipfsimage",
                "type": "t_string_storage"
              },
              {
                "label": "ipfsmetadata",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "ddc76bb7bb0b60f885efe31c61014c53be9c9dfa1e5eb5d56b9d4c846fe4ea9e": {
      "address": "0xC64e816B84eb0d7254269E1EFC5565488B2915eb",
      "txHash": "0xd5e40a5b7a37190a9528128b238e10634036565c546efdda2c4f4e40379d4688",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/TrustMultiV1.sol:14"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/TrustMultiV1.sol:19"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/TrustMultiV1.sol:64"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/TrustMultiV1.sol:106"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/TrustMultiV1.sol:498"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/TrustMultiV1.sol:501"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/TrustMultiV1.sol:504"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/TrustMultiV1.sol:506"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/TrustMultiV1.sol:509"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "token_id",
            "type": "t_mapping(t_uint256,t_struct(Metadata)759_storage)",
            "src": "contracts/TrustMultiV1.sol:516"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_creator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/TrustMultiV1.sol:517"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "checker",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/TrustMultiV1.sol:518"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts/TrustMultiV1.sol:959"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/TrustMultiV1.sol:1021"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/TrustMultiV1.sol:1081"
          },
          {
            "contract": "ERC1155BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/TrustMultiV1.sol:1124"
          },
          {
            "contract": "TrustMultiV1",
            "label": "order_place",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Order)2565_storage))",
            "src": "contracts/TrustMultiV1.sol:1440"
          },
          {
            "contract": "TrustMultiV1",
            "label": "checkOrder",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/TrustMultiV1.sol:1441"
          },
          {
            "contract": "TrustMultiV1",
            "label": "totalQuantity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/TrustMultiV1.sol:1442"
          },
          {
            "contract": "TrustMultiV1",
            "label": "_royal",
            "type": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(royalstr)2587_storage))",
            "src": "contracts/TrustMultiV1.sol:1449"
          },
          {
            "contract": "TrustMultiV1",
            "label": "tokentype",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "contracts/TrustMultiV1.sol:1450"
          },
          {
            "contract": "TrustMultiV1",
            "label": "serviceValue",
            "type": "t_uint256",
            "src": "contracts/TrustMultiV1.sol:1452"
          },
          {
            "contract": "TrustMultiV1",
            "label": "_currentBaseURI",
            "type": "t_string_storage",
            "src": "contracts/TrustMultiV1.sol:1454"
          },
          {
            "contract": "TrustMultiV1",
            "label": "_tid",
            "type": "t_uint256",
            "src": "contracts/TrustMultiV1.sol:1455"
          },
          {
            "contract": "TrustMultiV1",
            "label": "testAddress",
            "type": "t_address",
            "src": "contracts/TrustMultiV1.sol:1456"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Order)2565_storage))": {
            "label": "mapping(address => mapping(uint256 => struct TrustMultiV1.Order))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Order)2565_storage)": {
            "label": "mapping(uint256 => struct TrustMultiV1.Order)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Order)2565_storage": {
            "label": "struct TrustMultiV1.Order",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(royalstr)2587_storage))": {
            "label": "mapping(uint256 => mapping(string => struct TrustMultiV1.royalstr))"
          },
          "t_mapping(t_string_memory_ptr,t_struct(royalstr)2587_storage)": {
            "label": "mapping(string => struct TrustMultiV1.royalstr)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(royalstr)2587_storage": {
            "label": "struct TrustMultiV1.royalstr",
            "members": [
              {
                "label": "uaddress",
                "type": "t_address"
              },
              {
                "label": "pecentr",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_uint256,t_struct(Metadata)759_storage)": {
            "label": "mapping(uint256 => struct ERC1155Upgradeable.Metadata)"
          },
          "t_struct(Metadata)759_storage": {
            "label": "struct ERC1155Upgradeable.Metadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "ipfsimage",
                "type": "t_string_storage"
              },
              {
                "label": "ipfsmetadata",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "2337b23f9f36e1c88b68236f273773335454fa71deb5ac013250f06c61f99a5d": {
      "address": "0x62C2f73E90511e0432b1698eCCdf60b36e846F61",
      "txHash": "0x2e3b4ad72e3d36ef0bc04171480b2286f631949fdf7b06da513f998571cda6c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/TrustSingleV1.sol:12"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/TrustSingleV1.sol:17"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/TrustSingleV1.sol:664"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/TrustSingleV1.sol:757"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/TrustSingleV1.sol:770"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/TrustSingleV1.sol:773"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/TrustSingleV1.sol:776"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/TrustSingleV1.sol:779"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/TrustSingleV1.sol:782"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "checker",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/TrustSingleV1.sol:784"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/TrustSingleV1.sol:785"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/TrustSingleV1.sol:788"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts/TrustSingleV1.sol:1167"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/TrustSingleV1.sol:1208"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/TrustSingleV1.sol:1211"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/TrustSingleV1.sol:1214"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/TrustSingleV1.sol:1217"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/TrustSingleV1.sol:1355"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "token_id",
            "type": "t_mapping(t_uint256,t_struct(Metadata)2291_storage)",
            "src": "contracts/TrustSingleV1.sol:1367"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/TrustSingleV1.sol:1380"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/TrustSingleV1.sol:1432"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/TrustSingleV1.sol:1536"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/TrustSingleV1.sol:1448"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/TrustSingleV1.sol:1508"
          },
          {
            "contract": "TrustSingleV1",
            "label": "order_place",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Order)2751_storage))",
            "src": "contracts/TrustSingleV1.sol:1650"
          },
          {
            "contract": "TrustSingleV1",
            "label": "_royal",
            "type": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(royalstr)2763_storage))",
            "src": "contracts/TrustSingleV1.sol:1657"
          },
          {
            "contract": "TrustSingleV1",
            "label": "checkOrder",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/TrustSingleV1.sol:1659"
          },
          {
            "contract": "TrustSingleV1",
            "label": "totalQuantity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/TrustSingleV1.sol:1660"
          },
          {
            "contract": "TrustSingleV1",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/TrustSingleV1.sol:1661"
          },
          {
            "contract": "TrustSingleV1",
            "label": "_creator",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/TrustSingleV1.sol:1662"
          },
          {
            "contract": "TrustSingleV1",
            "label": "tokentype",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "contracts/TrustSingleV1.sol:1664"
          },
          {
            "contract": "TrustSingleV1",
            "label": "serviceValue",
            "type": "t_uint256",
            "src": "contracts/TrustSingleV1.sol:1665"
          },
          {
            "contract": "TrustSingleV1",
            "label": "_currentBaseURI",
            "type": "t_string_storage",
            "src": "contracts/TrustSingleV1.sol:1666"
          },
          {
            "contract": "TrustSingleV1",
            "label": "_tid",
            "type": "t_uint256",
            "src": "contracts/TrustSingleV1.sol:1667"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Order)2751_storage))": {
            "label": "mapping(address => mapping(uint256 => struct TrustSingleV1.Order))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Order)2751_storage)": {
            "label": "mapping(uint256 => struct TrustSingleV1.Order)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Order)2751_storage": {
            "label": "struct TrustSingleV1.Order",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(royalstr)2763_storage))": {
            "label": "mapping(uint256 => mapping(string => struct TrustSingleV1.royalstr))"
          },
          "t_mapping(t_string_memory_ptr,t_struct(royalstr)2763_storage)": {
            "label": "mapping(string => struct TrustSingleV1.royalstr)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(royalstr)2763_storage": {
            "label": "struct TrustSingleV1.royalstr",
            "members": [
              {
                "label": "uaddress",
                "type": "t_address"
              },
              {
                "label": "pecentr",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_struct(Metadata)2291_storage)": {
            "label": "mapping(uint256 => struct ERC721URIStorageUpgradeable.Metadata)"
          },
          "t_struct(Metadata)2291_storage": {
            "label": "struct ERC721URIStorageUpgradeable.Metadata",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "ipfsimage",
                "type": "t_string_storage"
              },
              {
                "label": "ipfsmetadata",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "1bce4a8315cdab8416c9b73be24ca7ac8482dd7adc7fc3ce98e5818a2d7abe9e": {
      "address": "0xC0164F076Cd2639b406A317Eba1d5928614e8250",
      "txHash": "0x846c620f43f5711fbaebc88206b1c9cee48b9e7f8f507ff9093c1a67047dcf16",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "EmpireMarketplaceV6",
            "label": "serviceFee",
            "type": "t_uint256",
            "src": "contracts/EmpireMarketplaceV6.sol:54"
          },
          {
            "contract": "EmpireMarketplaceV6",
            "label": "feeAddress",
            "type": "t_address",
            "src": "contracts/EmpireMarketplaceV6.sol:55"
          },
          {
            "contract": "EmpireMarketplaceV6",
            "label": "marketplaceOwner",
            "type": "t_address",
            "src": "contracts/EmpireMarketplaceV6.sol:56"
          },
          {
            "contract": "EmpireMarketplaceV6",
            "label": "empireToken",
            "type": "t_address",
            "src": "contracts/EmpireMarketplaceV6.sol:57"
          },
          {
            "contract": "EmpireMarketplaceV6",
            "label": "itemsForSale",
            "type": "t_array(t_struct(AuctionItem)2487_storage)dyn_storage",
            "src": "contracts/EmpireMarketplaceV6.sol:58"
          },
          {
            "contract": "EmpireMarketplaceV6",
            "label": "activeItems",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/EmpireMarketplaceV6.sol:61"
          },
          {
            "contract": "EmpireMarketplaceV6",
            "label": "validERC",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/EmpireMarketplaceV6.sol:62"
          },
          {
            "contract": "EmpireMarketplaceV6",
            "label": "auctionItemId",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/EmpireMarketplaceV6.sol:63"
          },
          {
            "contract": "EmpireMarketplaceV6",
            "label": "pendingReturns",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))",
            "src": "contracts/EmpireMarketplaceV6.sol:64"
          },
          {
            "contract": "EmpireMarketplaceV6",
            "label": "feeAggregatorAddress",
            "type": "t_address",
            "src": "contracts/EmpireMarketplaceV6.sol:69"
          },
          {
            "contract": "EmpireMarketplaceV6",
            "label": "AggregatorFee",
            "type": "t_uint256",
            "src": "contracts/EmpireMarketplaceV6.sol:70"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(AuctionItem)2487_storage)dyn_storage": {
            "label": "struct EmpireMarketplaceV6.AuctionItem[]"
          },
          "t_struct(AuctionItem)2487_storage": {
            "label": "struct EmpireMarketplaceV6.AuctionItem",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "askingPrice",
                "type": "t_uint256"
              },
              {
                "label": "isSold",
                "type": "t_bool"
              },
              {
                "label": "bidItem",
                "type": "t_bool"
              },
              {
                "label": "bidPrice",
                "type": "t_uint256"
              },
              {
                "label": "bidderAddress",
                "type": "t_address"
              },
              {
                "label": "ERC20",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
          }
        }
      }
    }
  }
}
